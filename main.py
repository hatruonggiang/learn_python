import pygame
import random

# Kh·ªüi t·∫°o Pygame
pygame.init()

# K√≠ch th∆∞·ªõc c·ª≠a s·ªï game
WIDTH, HEIGHT = 600, 400
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("üêç Snake Game")

# M√†u s·∫Øc
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLACK = (0, 0, 0)

# Thi·∫øt l·∫≠p t·ªëc ƒë·ªô game
clock = pygame.time.Clock()
SPEED = 10  # FPS

# 2: t·∫°o r·∫Øn v√† th·ª©c ƒÉn
snake_pos = [[100, 50], [90, 50], [80, 50]]  # V·ªã tr√≠ c·ªßa r·∫Øn
snake_direction = "RIGHT"  # H∆∞·ªõng ƒëi ban ƒë·∫ßu
change_to = snake_direction

food_pos = [random.randrange(1, (WIDTH//10)) * 10, random.randrange(1, (HEIGHT//10)) * 10]
food_spawn = True
score = 0

# 3: x·ª≠ l√Ω di chuy·ªÉn c·ªßa r·∫Øn
def change_direction(event):
    global change_to
    if event.type == pygame.KEYDOWN:
        if event.key == pygame.K_UP and snake_direction != "DOWN":
            change_to = "UP"
        elif event.key == pygame.K_DOWN and snake_direction != "UP":
            change_to = "DOWN"
        elif event.key == pygame.K_LEFT and snake_direction != "RIGHT":
            change_to = "LEFT"
        elif event.key == pygame.K_RIGHT and snake_direction != "LEFT":
            change_to = "RIGHT"

# 4: c·∫≠p nh·∫≠t tr·∫°ng th√°i r·∫Øn
def move_snake():
    global snake_direction
    snake_direction = change_to

    if snake_direction == "UP":
        snake_pos.insert(0, [snake_pos[0][0], snake_pos[0][1] - 10])
    elif snake_direction == "DOWN":
        snake_pos.insert(0, [snake_pos[0][0], snake_pos[0][1] + 10])
    elif snake_direction == "LEFT":
        snake_pos.insert(0, [snake_pos[0][0] - 10, snake_pos[0][1]])
    elif snake_direction == "RIGHT":
        snake_pos.insert(0, [snake_pos[0][0] + 10, snake_pos[0][1]])

    # Ki·ªÉm tra n·∫øu r·∫Øn kh√¥ng ƒÉn th·ª©c ƒÉn, lo·∫°i b·ªè ph·∫ßn ƒëu√¥i
    if snake_pos[0] != food_pos:
        snake_pos.pop()
    else:
        global food_spawn, score
        food_spawn = False
        score += 1

# 5: ki·ªÉm tra va ch·∫°m
def check_collision():
    if snake_pos[0][0] < 0 or snake_pos[0][0] >= WIDTH or snake_pos[0][1] < 0 or snake_pos[0][1] >= HEIGHT:
        return True

    for block in snake_pos[1:]:
        if snake_pos[0] == block:
            return True

    return False

# 6: v·∫Ω m√†n h√¨nh game
def draw_elements():
    screen.fill(BLACK)

    # V·∫Ω r·∫Øn
    for pos in snake_pos:
        pygame.draw.rect(screen, GREEN, pygame.Rect(pos[0], pos[1], 10, 10))

    # V·∫Ω th·ª©c ƒÉn
    pygame.draw.rect(screen, RED, pygame.Rect(food_pos[0], food_pos[1], 10, 10))

    pygame.display.flip()

#7: ch·∫°y v√≤ng l·∫∑p game ch√≠nh
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        change_direction(event)

    move_snake()

    if check_collision():
        running = False  # K·∫øt th√∫c game n·∫øu va ch·∫°m

    if not food_spawn:
        food_pos = [random.randrange(1, (WIDTH//10)) * 10, random.randrange(1, (HEIGHT//10)) * 10]
        food_spawn = True

    draw_elements()
    clock.tick(SPEED)

pygame.quit()
